{"version":3,"sources":["../../../../../src/components/Modal/icons.tsx","../../../../../src/components/Modal/index.tsx","../../../../../src/components/WalletSelectorModal/ButtonWithFooter.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepConnecting/ConnectingAnimation.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepConnecting/index.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepIntro/Detail.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepIntro/icons.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepIntro/index.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepIntro/DefaultAppIcon.tsx","../../../../src/components/LabeledInput.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepLedgerAdvanced/index.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepRedirect/index.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepSelect/WalletProviderOption.tsx","../../../../../../src/components/WalletSelectorModal/WalletStepSelect/index.tsx","../../../../../src/components/WalletSelectorModal/index.tsx","../../../src/WalletKitProvider.tsx","../../../../../src/components/ConnectWalletButton/index.tsx","Body.tsx","App.tsx","index.tsx"],"names":["props","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fillRule","clipRule","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","children","isOpen","onDismiss","darkenOverlay","onBack","hideCloseButton","hideSolanaLogo","fadeTransition","config","duration","from","opacity","enter","leave","y","mass","tension","friction","set","bind","onDrag","state","down","movement","velocity","direction","styles","item","StyledDialogOverlay","style","get","ModalWrapper","className","transform","to","n","TopArea","ButtonIcon","href","onClick","e","stopPropagation","preventDefault","LogoWrapper","Content","shouldForwardProp","prop","footer","BottomArea","BigButton","FooterText","frameMs","Date","now","setNow","interval","setInterval","clearInterval","frame","Math","floor","css","cx","cy","r","appIcon","info","onComplete","walletProviderInfo","icon","src","alt","name","activate","connected","wallet","error","setError","isManualConnect","type","Sollet","Solflare","doActivate","message","timeout","setTimeout","clearTimeout","Wrapper","ConnectingWrapper","ConnectingHeader","Connecting","ConnectingInstructions","connect","AppIconsWrapper","AppIcons","title","description","Info","Title","Description","rx","ry","appName","onContinue","Instruction","DetailsWrapper","target","rel","label","inputProps","Fieldset","Label","htmlFor","InputBorder","Input","onSuccess","onError","accountStr","setAccountStr","changeStr","setChangeStr","IconWrapper","Ledger","Fields","placeholder","value","onChange","account","undefined","parseInt","change","providerURL","URL","url","hostname","window","open","location","reload","onInstall","onSelect","mustInstall","isInstalled","startsWith","slice","role","InfoTileWrapper","InfoTile","ProviderDesc","ProviderName","ProviderUrl","ModalStep","base","Object","entries","filter","p","isMobile","sort","a","b","map","walletType","SecretKey","showUninstalled","setShowUninstalled","providerInfo","setProviderInfo","Heading","ScrollArea","Wallets","prov","fullInfo","provider","ShowUninstalledWrapper","ShowUninstalled","defaultOnWalletKitError","err","console","app","onWalletKitError","initialStep","Intro","modalProps","step","setStep","installProvider","setInstallProvider","disconnect","walletToConnect","setWalletToConnect","Select","Redirect","LedgerAdvanced","WalletKitContext","createContext","solanaProviderArgs","showWalletSelector","setShowWalletSelector","kit","Provider","clipPath","variant","buttonProps","Error","Button","Body","useSolana","providerMut","network","setNetwork","useConnectedWallet","useState","balance","setBalance","refetchSOL","useCallback","connection","getBalance","publicKey","useEffect","AppWrapper","breakpoints","mobile","WalletInfo","toString","LAMPORTS_PER_SOL","toLocaleString","Buttons","disabled","invariant","requestAirdrop","txSig","PendingTransaction","wait","createInitMintInstructions","mintKP","Keypair","generate","decimals","tx","confirm","lighten","maxMediaQueries","bp","tablet","medium","App","defaultNetwork","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.815f59d4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const BackIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M4 12L3.29289 11.2929L2.58579 12L3.29289 12.7071L4 12ZM19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11V13ZM9.29289 5.29289L3.29289 11.2929L4.70711 12.7071L10.7071 6.70711L9.29289 5.29289ZM3.29289 12.7071L9.29289 18.7071L10.7071 17.2929L4.70711 11.2929L3.29289 12.7071ZM4 13H19V11H4V13Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport const CloseIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M18 6L6 18\"\n      stroke=\"currentcolor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M6 6L18 18\"\n      stroke=\"currentcolor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nexport const SolanaLogo: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"94\"\n    height=\"12\"\n    viewBox=\"0 0 94 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M27.7175 4.87199H20.8653V2.61599H29.4915V0.359985H20.8495C20.2493 0.359985 19.6737 0.596019 19.2493 1.01616C18.825 1.43631 18.5865 2.00615 18.5865 2.60032V4.88765C18.5865 5.48182 18.825 6.05166 19.2493 6.47181C19.6737 6.89195 20.2493 7.12799 20.8495 7.12799H27.7017V9.38399H18.7495V11.64H27.7175C28.3177 11.64 28.8933 11.404 29.3176 10.9838C29.742 10.5637 29.9805 9.99382 29.9805 9.39965V7.11232C29.9805 6.51815 29.742 5.94831 29.3176 5.52816C28.8933 5.10802 28.3177 4.87199 27.7175 4.87199Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M40.9865 0.359985H34.1091C33.8119 0.359985 33.5178 0.417945 33.2433 0.530551C32.9689 0.643158 32.7195 0.808204 32.5095 1.01626C32.2995 1.22431 32.133 1.4713 32.0194 1.7431C31.9058 2.0149 31.8475 2.30618 31.8477 2.60032V9.39965C31.8475 9.69379 31.9058 9.98507 32.0194 10.2569C32.133 10.5287 32.2995 10.7757 32.5095 10.9837C32.7195 11.1918 32.9689 11.3568 33.2433 11.4694C33.5178 11.582 33.8119 11.64 34.1091 11.64H40.9865C41.5867 11.64 42.1624 11.404 42.5867 10.9838C43.0111 10.5637 43.2495 9.99382 43.2495 9.39965V2.60032C43.2495 2.00615 43.0111 1.43631 42.5867 1.01616C42.1624 0.596019 41.5867 0.359985 40.9865 0.359985ZM40.9708 9.38399H34.1344V2.61599H40.9708V9.38399Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M65.0562 0.359986H58.3497C57.7495 0.359986 57.1738 0.596021 56.7494 1.01616C56.3251 1.43631 56.0867 2.00615 56.0867 2.60032V11.64H58.3655V7.93325H65.0404V11.64H67.3192V2.60032C67.3194 2.30606 67.261 2.01464 67.1473 1.74274C67.0337 1.47083 66.867 1.22378 66.6568 1.0157C66.4467 0.80763 66.1971 0.642616 65.9225 0.530102C65.6478 0.417587 65.3535 0.35978 65.0562 0.359986ZM65.0404 5.67725H58.3655V2.61599H65.0404V5.67725Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M91.7369 0.35999H85.0319C84.7344 0.359372 84.4395 0.416864 84.1644 0.529175C83.8893 0.641485 83.6394 0.806409 83.4287 1.01451C83.218 1.2226 83.0509 1.46978 82.937 1.7419C82.8229 2.01401 82.7642 2.30573 82.7642 2.60032V11.64H85.043V7.93326H91.7211V11.64H93.9999V2.60032C93.9999 2.00615 93.7615 1.43631 93.3371 1.01617C92.9127 0.596025 92.3371 0.35999 91.7369 0.35999ZM91.7211 5.67726H85.0477V2.61599H91.7211V5.67726Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M78.4615 9.38399H77.5499L74.2837 1.29999C74.172 1.02262 73.9788 0.784789 73.7292 0.617222C73.4795 0.449656 73.1848 0.360052 72.8832 0.359985H70.8545C70.4545 0.359985 70.0709 0.517286 69.7881 0.797285C69.5052 1.07728 69.3463 1.45704 69.3463 1.85302V11.64H71.6251V2.61599H72.5366L75.8013 10.7C75.9125 10.9774 76.1054 11.2152 76.3548 11.3828C76.6043 11.5505 76.8987 11.64 77.2002 11.64H79.229C79.629 11.64 80.0126 11.4827 80.2954 11.2027C80.5782 10.9227 80.737 10.5429 80.737 10.1469V0.359985H78.4583L78.4615 9.38399Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M47.5475 0.359985H45.2687V9.39965C45.2687 9.99382 45.5071 10.5637 45.9315 10.9838C46.356 11.404 46.9315 11.64 47.5317 11.64H54.3838V9.38399H47.5475V0.359985Z\"\n      fill=\"black\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M2.41173 8.96099C2.4522 8.9176 2.50108 8.88275 2.55546 8.85853C2.60985 8.83431 2.66861 8.8212 2.72824 8.81999H12.6726C12.7147 8.82057 12.7556 8.83318 12.7907 8.85629C12.8257 8.87941 12.8532 8.91205 12.8699 8.95027C12.8867 8.9885 12.8919 9.0307 12.8849 9.07179C12.878 9.11288 12.8593 9.15111 12.8309 9.18189L10.723 11.499C10.6825 11.5424 10.6336 11.5772 10.5793 11.6014C10.5249 11.6257 10.4661 11.6388 10.4065 11.64H0.455778C0.413703 11.6394 0.372695 11.6268 0.337686 11.6037C0.302678 11.5806 0.27516 11.5479 0.258443 11.5097C0.241726 11.4715 0.236522 11.4293 0.243455 11.3882C0.250389 11.3471 0.269166 11.3089 0.297529 11.2781L2.41173 8.96099ZM12.8404 7.04025C12.8688 7.07102 12.8875 7.10926 12.8944 7.15035C12.9014 7.19144 12.8962 7.23363 12.8794 7.27186C12.8627 7.3101 12.8352 7.34273 12.8002 7.36584C12.7651 7.38895 12.7242 7.40156 12.6821 7.40215L2.73456 7.40999C2.67495 7.40877 2.61617 7.39567 2.56179 7.37145C2.50741 7.34722 2.45852 7.31237 2.41807 7.26899L0.294364 4.95972C0.266002 4.92895 0.247225 4.89072 0.24029 4.84963C0.233356 4.80854 0.238561 4.76634 0.255278 4.72811C0.271995 4.68987 0.299512 4.65724 0.334521 4.63413C0.369529 4.61102 0.410538 4.59841 0.452614 4.59782L10.4002 4.58999C10.4598 4.5912 10.5185 4.6043 10.5729 4.62853C10.6273 4.65275 10.6762 4.6876 10.7167 4.73099L12.8404 7.04025ZM2.41173 0.500985C2.4522 0.457606 2.50108 0.422759 2.55546 0.398531C2.60985 0.374303 2.66861 0.361192 2.72824 0.359985L12.679 0.367819C12.721 0.368405 12.7621 0.381014 12.7971 0.404128C12.8321 0.427242 12.8595 0.459877 12.8762 0.498107C12.893 0.536338 12.8982 0.578535 12.8913 0.619624C12.8843 0.660714 12.8656 0.698945 12.8372 0.729719L10.723 3.03899C10.6825 3.08237 10.6336 3.11722 10.5793 3.14145C10.5249 3.16567 10.4661 3.17878 10.4065 3.17999H0.455778C0.413703 3.1794 0.372695 3.16679 0.337686 3.14368C0.302678 3.12057 0.27516 3.08792 0.258443 3.0497C0.241726 3.01147 0.236522 2.96927 0.243455 2.92818C0.250389 2.88709 0.269166 2.84886 0.297529 2.81809L2.41173 0.500985Z\"\n      fill=\"url(#goki_walletkit_solana_logo_fill)\"\n    />\n    <defs>\n      <linearGradient\n        id=\"goki_walletkit_solana_logo_fill\"\n        x1=\"0.62194\"\n        y1=\"11.8859\"\n        x2=\"12.3933\"\n        y2=\"-0.00428666\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#9945FF\" />\n        <stop offset=\"0.14\" stopColor=\"#8A53F4\" />\n        <stop offset=\"0.42\" stopColor=\"#6377D6\" />\n        <stop offset=\"0.79\" stopColor=\"#24B0A7\" />\n        <stop offset=\"0.99\" stopColor=\"#00D18C\" />\n        <stop offset=\"1\" stopColor=\"#00D18C\" />\n      </linearGradient>\n    </defs>\n  </svg>\n);\n","import { css, Global } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { DialogContent, DialogOverlay } from \"@reach/dialog\";\nimport { animated, useSpring, useTransition } from \"@react-spring/web\";\nimport darken from \"polished/lib/color/darken\";\nimport React from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useGesture } from \"react-use-gesture\";\n\nimport { BackIcon, CloseIcon, SolanaLogo } from \"./icons\";\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n  onDismiss: () => void;\n  darkenOverlay?: boolean;\n\n  onBack?: () => void;\n  hideCloseButton?: boolean;\n  hideSolanaLogo?: boolean;\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  children,\n  isOpen,\n  onDismiss,\n  darkenOverlay = true,\n\n  onBack,\n  hideCloseButton = false,\n  hideSolanaLogo = true,\n}: ModalProps) => {\n  const fadeTransition = useTransition(isOpen, {\n    config: { duration: 150 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  });\n\n  const [{ y }, set] = useSpring(() => ({\n    y: 0,\n    config: { mass: 1, tension: 210, friction: 20 },\n  }));\n  const bind = useGesture({\n    onDrag: (state) => {\n      set({\n        y: state.down ? state.movement[1] : 0,\n      });\n      if (\n        state.movement[1] > 300 ||\n        (state.velocity > 3 && state.direction[1] > 0)\n      ) {\n        onDismiss();\n      }\n    },\n  });\n\n  return (\n    <>\n      {/* @reach/dialog/styles.css */}\n      <Global\n        styles={css`\n          :root {\n            --reach-dialog: 1;\n          }\n\n          [data-reach-dialog-overlay] {\n            background: hsla(0, 0%, 0%, 0.33);\n            position: fixed;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            overflow: auto;\n          }\n\n          [data-reach-dialog-content] {\n            width: 50vw;\n            margin: 10vh auto;\n            background: white;\n            padding: 2rem;\n            outline: none;\n          }\n        `}\n      />\n      {fadeTransition(\n        (props, item) =>\n          item && (\n            <StyledDialogOverlay\n              style={props}\n              isOpen={isOpen || props.opacity.get() !== 0}\n              onDismiss={onDismiss}\n              darkenOverlay={darkenOverlay}\n            >\n              <ModalWrapper\n                className=\"goki-walletkit-modal-wrapper\"\n                aria-label=\"dialog content\"\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                      style: {\n                        transform: y.to(\n                          (n) => `translateY(${n > 0 ? n : 0}px)`\n                        ),\n                      },\n                    }\n                  : {})}\n              >\n                <TopArea>\n                  {onBack ? (\n                    <ButtonIcon\n                      href=\"#\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        onBack();\n                      }}\n                    >\n                      <BackIcon />\n                    </ButtonIcon>\n                  ) : (\n                    <div />\n                  )}\n                  {hideSolanaLogo ? (\n                    <div />\n                  ) : (\n                    <LogoWrapper>\n                      <SolanaLogo />\n                    </LogoWrapper>\n                  )}\n                  {hideCloseButton ? (\n                    <div />\n                  ) : (\n                    <ButtonIcon\n                      href=\"#\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        onDismiss();\n                      }}\n                    >\n                      <CloseIcon />\n                    </ButtonIcon>\n                  )}\n                </TopArea>\n                <Content>{children}</Content>\n              </ModalWrapper>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  );\n};\n\nconst LogoWrapper = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  justify-content: center;\n`;\n\nconst TopArea = styled.div`\n  position: absolute;\n  top: 12px;\n  left: 16px;\n  right: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ButtonIcon = styled.a`\n  flex: 0 0 24px;\n  color: #ccd2e3;\n  &:hover {\n    color: ${darken(0.1, \"#ccd2e3\")};\n  }\n  transition: 0.1s ease;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 28px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst ModalWrapper = styled(animated(DialogContent))`\n  * {\n    box-sizing: border-box;\n  }\n  font-family: Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\";\n\n  position: relative;\n\n  box-shadow: 0px 4px 16px rgba(207, 207, 207, 0.25);\n  width: 100%;\n  max-width: 360px;\n  height: 608px;\n  border-radius: 8px;\n  background: #fff;\n  color: #696969;\n\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: -0.02em;\n  color: #696969;\n`;\n\nconst StyledDialogOverlay = styled(animated(DialogOverlay), {\n  shouldForwardProp(prop) {\n    return prop !== \"darkenOverlay\";\n  },\n})<{\n  darkenOverlay: boolean;\n}>`\n  [data-reach-dialog-content] {\n    padding: 0;\n  }\n\n  ${({ darkenOverlay }) =>\n    darkenOverlay\n      ? css`\n          background: rgba(0, 0, 0, 0.55);\n        `\n      : css`\n          background: none;\n        `}\n`;\n","import styled from \"@emotion/styled\";\nimport { lighten } from \"polished\";\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  footer?: React.ReactNode;\n}\n\nexport const ButtonWithFooter: React.FC<Props> = ({\n  footer,\n  children,\n  ...props\n}: Props) => {\n  return (\n    <BottomArea>\n      <BigButton {...props}>{children}</BigButton>\n      <FooterText>{footer}</FooterText>\n    </BottomArea>\n  );\n};\n\nexport const BottomArea = styled.div`\n  position: absolute;\n  left: 28px;\n  right: 28px;\n  bottom: 28px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n`;\n\nexport const FooterText = styled.div`\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: -0.02em;\n  color: #696969;\n  & > a {\n    color: #696969;\n    font-weight: bold;\n  }\n`;\n\nexport const BigButton = styled.button`\n  border: none;\n  outline: none;\n\n  border-radius: 16px;\n  height: 55px;\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n\n  background: #000000;\n  color: #fff;\n  &:hover {\n    background: ${lighten(0.133, \"#000\")};\n  }\n  &:active {\n    background: ${lighten(0.212, \"#000\")};\n  }\n  cursor: pointer;\n`;\n","import { css } from \"@emotion/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n\ninterface Props {\n  fill?: string;\n  frameMs?: number;\n}\n\nexport const ConnectingAnimation: React.FC<Props> = ({\n  fill = \"#6764FB\",\n  frameMs = 160,\n}: Props) => {\n  const [now, setNow] = useState<number>(Date.now());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(Date.now());\n    }, frameMs);\n    return () => clearInterval(interval);\n  }, [frameMs]);\n\n  const frame = useMemo(() => Math.floor(now / frameMs) % 7, [frameMs, now]);\n\n  return (\n    <svg\n      width=\"56\"\n      height=\"12\"\n      viewBox=\"0 0 56 12\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      css={css`\n        circle {\n          transition: fill 0.4s ease;\n        }\n      `}\n    >\n      <circle cx=\"2.5\" cy=\"2.5\" r=\"2.5\" fill={frame === 0 ? fill : \"#dedede\"} />\n      <circle\n        cx=\"19.5\"\n        cy=\"2.5\"\n        r=\"2.5\"\n        fill={frame === 2 ? fill : \"#DEDEDE\"}\n      />\n      <circle\n        cx=\"36.5\"\n        cy=\"2.5\"\n        r=\"2.5\"\n        fill={frame === 4 ? fill : \"#DEDEDE\"}\n      />\n      <circle\n        cx=\"53.5\"\n        cy=\"2.5\"\n        r=\"2.5\"\n        fill={frame === 6 ? fill : \"#dedede\"}\n      />\n\n      <circle\n        cx=\"12.5\"\n        cy=\"9.5\"\n        r=\"2.5\"\n        fill={frame === 1 ? fill : \"#dedede\"}\n      />\n      <circle\n        cx=\"29.5\"\n        cy=\"9.5\"\n        r=\"2.5\"\n        fill={frame === 3 ? fill : \"#dedede\"}\n      />\n      <circle\n        cx=\"46.5\"\n        cy=\"9.5\"\n        r=\"2.5\"\n        fill={frame === 5 ? fill : \"#dedede\"}\n      />\n    </svg>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { DefaultWalletType, useSolana } from \"@saberhq/use-solana\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nimport { BottomArea, FooterText } from \"../ButtonWithFooter\";\nimport type { ProviderInfo } from \"../WalletStepSelect\";\nimport { ConnectingAnimation } from \"./ConnectingAnimation\";\n\ninterface Props {\n  appIcon: React.ReactNode;\n  info: ProviderInfo;\n  onBack?: () => void;\n  onComplete?: () => void;\n}\n\nexport const WalletStepConnecting: React.FC<Props> = ({\n  appIcon,\n  info,\n  onBack,\n  onComplete,\n}: Props) => {\n  const walletProviderInfo = info.info;\n  const icon =\n    typeof walletProviderInfo.icon === \"string\" ? (\n      <img\n        src={walletProviderInfo.icon}\n        alt={`Icon for wallet ${walletProviderInfo.name}`}\n      />\n    ) : (\n      <walletProviderInfo.icon />\n    );\n  const { activate, connected, wallet } = useSolana();\n  const [error, setError] = useState<string | null>(null);\n\n  const isManualConnect =\n    isMobile &&\n    (info.type === DefaultWalletType.Sollet ||\n      info.type === DefaultWalletType.Solflare);\n\n  const doActivate = useCallback(async () => {\n    try {\n      await activate(info.type);\n      setError(null);\n    } catch (e) {\n      setError((e as Error).message);\n    }\n  }, [activate, info.type]);\n\n  // attempt to activate the wallet on initial load\n  useEffect(() => {\n    if (isManualConnect) {\n      return;\n    }\n    // delay so people can see a message\n    const timeout = setTimeout(() => {\n      void doActivate();\n    }, 500);\n    return () => clearTimeout(timeout);\n    // only run this on the first display of this modal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // close modal only when the wallet is connected\n  useEffect(() => {\n    if (wallet && connected) {\n      onComplete?.();\n    }\n  }, [wallet, connected, onComplete]);\n\n  return (\n    <Wrapper>\n      <ConnectingWrapper>\n        {error ? (\n          <ConnectingHeader>\n            <Connecting>Error connecting wallet</Connecting>\n            <ConnectingInstructions>{error}</ConnectingInstructions>\n            <ConnectingInstructions>\n              <a\n                css={css`\n                  color: #696969;\n                  font-weight: bold;\n                `}\n                href=\"#\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  e.preventDefault();\n                  void doActivate();\n                }}\n              >\n                Retry\n              </a>\n            </ConnectingInstructions>\n          </ConnectingHeader>\n        ) : (\n          <ConnectingHeader>\n            <Connecting>Connecting...</Connecting>\n            {isManualConnect ? (\n              <ConnectingInstructions>\n                Please{\" \"}\n                <a\n                  css={css`\n                    color: #696969;\n                    font-weight: bold;\n                  `}\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    void wallet?.connect();\n                  }}\n                >\n                  click here\n                </a>{\" \"}\n                to unlock your {walletProviderInfo.name} wallet.\n              </ConnectingInstructions>\n            ) : (\n              <ConnectingInstructions>\n                Please unlock your {walletProviderInfo.name} wallet.\n              </ConnectingInstructions>\n            )}\n          </ConnectingHeader>\n        )}\n        <AppIconsWrapper>\n          <AppIcons>\n            {icon}\n            <ConnectingAnimation />\n            {appIcon}\n          </AppIcons>\n        </AppIconsWrapper>\n        <BottomArea>\n          <FooterText>\n            Having trouble?{\" \"}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                onBack?.();\n              }}\n            >\n              Go back\n            </a>\n          </FooterText>\n        </BottomArea>\n      </ConnectingWrapper>\n    </Wrapper>\n  );\n};\n\nconst ConnectingHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 9px;\n  margin-top: 68px;\n  margin-bottom: 71px;\n`;\n\nconst Connecting = styled.h2`\n  margin: 0;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 29px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #000000;\n`;\n\nconst ConnectingInstructions = styled.p`\n  margin: 0;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 17px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #696969;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst AppIcons = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr 48px;\n  grid-column-gap: 20px;\n  align-items: center;\n  width: 192px;\n\n  & > img,\n  & > svg {\n    width: 48px;\n    height: 48px;\n  }\n`;\n\nconst AppIconsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst ConnectingWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: calc(100% - 154px);\n\n  background: #f9f9f9;\n  border-radius: 32px 32px 8px 8px;\n\n  animation: fadeIn 0.2s forwards;\n  animation-timing-function: ease-out;\n\n  @keyframes fadeIn {\n    0% {\n      bottom: -300px;\n    }\n    100% {\n      bottom: 0;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\n\ninterface Props {\n  icon: React.ReactNode;\n  title: string;\n  description: string;\n}\n\nexport const Detail: React.FC<Props> = ({\n  icon,\n  title,\n  description,\n}: Props) => {\n  return (\n    <Wrapper>\n      {icon}\n      <Info>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </Info>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 18px 1fr;\n  grid-column-gap: 9px;\n  width: 100%;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nconst Title = styled.span`\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: #000000;\n`;\n\nconst Description = styled.p`\n  margin: 0;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: -0.02em;\n  color: #696969;\n`;\n","import React from \"react\";\n\nexport const SolanaIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"48\"\n    height=\"48\"\n    viewBox=\"0 0 48 48\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M24 48C37.2548 48 48 37.2548 48 24C48 10.7452 37.2548 0 24 0C10.7452 0 0 10.7452 0 24C0 37.2548 10.7452 48 24 48Z\"\n      fill=\"black\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M14.8105 30.6157C14.9009 30.5163 15.0109 30.437 15.1337 30.3826C15.2563 30.3283 15.3892 30.3002 15.5233 30.3001L37.5169 30.3181C37.6106 30.3183 37.7022 30.3457 37.7806 30.3969C37.859 30.4481 37.9208 30.5211 37.9585 30.6068C37.9963 30.6925 38.0083 30.7874 37.9932 30.8798C37.9781 30.9722 37.9364 31.0582 37.8733 31.1275L33.1897 36.2845C33.0994 36.3838 32.9892 36.4633 32.8664 36.5176C32.7436 36.572 32.6107 36.6001 32.4763 36.6001L10.4834 36.5821C10.3897 36.5818 10.2981 36.5545 10.2197 36.5032C10.1413 36.452 10.0795 36.379 10.0417 36.2933C10.004 36.2077 9.99195 36.1127 10.0071 36.0203C10.0222 35.9279 10.0639 35.8419 10.127 35.7727L14.8105 30.6157ZM37.8733 26.3227C37.9364 26.3919 37.9781 26.4779 37.9932 26.5703C38.0083 26.6627 37.9963 26.7577 37.9585 26.8433C37.9208 26.929 37.859 27.002 37.7806 27.0532C37.7022 27.1045 37.6106 27.1318 37.5169 27.1321L15.5239 27.1501C15.3896 27.1501 15.2568 27.122 15.1339 27.0676C15.011 27.0133 14.9009 26.9338 14.8105 26.8345L10.127 21.6745C10.0639 21.6052 10.0222 21.5192 10.0071 21.4268C9.99195 21.3344 10.004 21.2395 10.0417 21.1538C10.0795 21.0681 10.1413 20.9951 10.2197 20.9439C10.2981 20.8927 10.3897 20.8653 10.4834 20.8651L32.4769 20.8471C32.6112 20.8472 32.7439 20.8753 32.8667 20.9296C32.9894 20.984 33.0995 21.0633 33.1897 21.1627L37.8733 26.3227ZM14.8105 11.7157C14.9009 11.6163 15.0109 11.537 15.1337 11.4826C15.2563 11.4283 15.3892 11.4001 15.5233 11.4001L37.5169 11.4181C37.6106 11.4182 37.7022 11.4456 37.7806 11.4969C37.859 11.5481 37.9208 11.621 37.9585 11.7068C37.9963 11.7925 38.0083 11.8873 37.9932 11.9798C37.9781 12.0722 37.9364 12.1582 37.8733 12.2275L33.1897 17.3845C33.0994 17.4838 32.9892 17.5633 32.8664 17.6176C32.7436 17.672 32.6107 17.7001 32.4763 17.7001L10.4834 17.6821C10.3897 17.6818 10.2981 17.6545 10.2197 17.6032C10.1413 17.552 10.0795 17.479 10.0417 17.3933C10.004 17.3077 9.99195 17.2127 10.0071 17.1203C10.0222 17.0279 10.0639 16.9419 10.127 16.8727L14.8105 11.7157Z\"\n      fill=\"url(#paint0_linear)\"\n    />\n    <defs>\n      <linearGradient\n        id=\"paint0_linear\"\n        x1=\"10.8506\"\n        y1=\"37.1497\"\n        x2=\"37.1497\"\n        y2=\"10.8505\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#9945FF\" />\n        <stop offset=\"0.2\" stopColor=\"#7962E7\" />\n        <stop offset=\"1\" stopColor=\"#00D18C\" />\n      </linearGradient>\n    </defs>\n  </svg>\n);\n\nexport const ConnectDots: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"56\"\n    height=\"12\"\n    viewBox=\"0 0 56 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <circle cx=\"19.5\" cy=\"2.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n    <circle cx=\"36.5\" cy=\"2.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n    <circle cx=\"2.5\" cy=\"2.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n    <circle cx=\"53.5\" cy=\"2.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n    <circle cx=\"12.5\" cy=\"9.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n    <circle cx=\"29.5\" cy=\"9.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n    <circle cx=\"46.5\" cy=\"9.5\" r=\"2.5\" fill=\"#DEDEDE\" />\n  </svg>\n);\n\nexport const LockIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M4 9.60005C4 8.73069 4 8.29601 4.13285 7.94994C4.33597 7.42079 4.75409 7.00267 5.28325 6.79954C5.62931 6.66669 6.06399 6.66669 6.93336 6.66669H10.8445C11.7139 6.66669 12.1485 6.66669 12.4946 6.79954C13.0238 7.00267 13.4419 7.42079 13.645 7.94994C13.7779 8.29601 13.7779 8.73069 13.7779 9.60005V9.60005C13.7779 10.9041 13.7779 11.5561 13.5786 12.0752C13.2739 12.8689 12.6467 13.4961 11.853 13.8008C11.3339 14.0001 10.6819 14.0001 9.37782 14.0001H8.40003C7.09599 14.0001 6.44397 14.0001 5.92487 13.8008C5.13114 13.4961 4.50396 12.8689 4.19927 12.0752C4 11.5561 4 10.9041 4 9.60005V9.60005Z\"\n      stroke=\"black\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M11.3334 6.05558V5.44446C11.3334 4.09442 10.239 3 8.88892 3V3C7.53888 3 6.44446 4.09442 6.44446 5.44446V6.05558\"\n      stroke=\"black\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n    />\n    <ellipse cx=\"8.88892\" cy=\"10.3334\" rx=\"1.22223\" ry=\"1.22223\" fill=\"black\" />\n  </svg>\n);\n\nexport const BoltIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M7.66447 10.8127H8.53714V13.9986L8.53714 14.0272C8.53712 14.3463 8.53711 14.6243 8.55872 14.8253C8.56961 14.9265 8.58976 15.0525 8.64129 15.1678C8.69746 15.2935 8.81988 15.4635 9.05182 15.5146C9.28375 15.5657 9.4663 15.4628 9.57008 15.3723C9.66527 15.2894 9.73648 15.1835 9.7889 15.0962C9.89294 14.9229 10.0097 14.6707 10.1438 14.381L10.1558 14.3551L12.1557 10.0354L12.171 10.0023C12.3861 9.53761 12.5693 9.14202 12.6647 8.81793C12.7646 8.47858 12.804 8.1028 12.5828 7.75669C12.3617 7.41059 12.0041 7.28844 11.6542 7.23654C11.32 7.18697 10.8841 7.18699 10.372 7.18702L10.3355 7.18702H9.46286V4.00112L9.46286 3.97257C9.46288 3.65344 9.46289 3.37544 9.44128 3.17449C9.43039 3.07324 9.41024 2.94728 9.35872 2.83199C9.30254 2.7063 9.18012 2.53622 8.94819 2.48513C8.71625 2.43405 8.5337 2.53696 8.42992 2.62742C8.33473 2.71039 8.26352 2.81623 8.2111 2.90354C8.10706 3.07682 7.99029 3.32909 7.85623 3.61871L7.84424 3.64461L5.84435 7.96437L5.82902 7.99748C5.61386 8.46215 5.4307 8.85773 5.33528 9.18182C5.23536 9.52117 5.196 9.89696 5.41716 10.2431C5.63832 10.5892 5.99587 10.7113 6.3458 10.7632C6.67998 10.8128 7.11592 10.8128 7.62798 10.8127L7.66447 10.8127Z\"\n      fill=\"black\"\n      stroke=\"white\"\n      strokeWidth=\"0.925714\"\n    />\n  </svg>\n);\n","import styled from \"@emotion/styled\";\n\nimport { ButtonWithFooter } from \"../ButtonWithFooter\";\nimport { Detail } from \"./Detail\";\nimport { BoltIcon, ConnectDots, LockIcon, SolanaIcon } from \"./icons\";\n\ninterface Props {\n  appName: string;\n  appIcon?: React.ReactNode;\n  onContinue?: () => void;\n}\n\nexport const WalletStepIntro: React.FC<Props> = ({\n  appName,\n  appIcon,\n  onContinue,\n}: Props) => {\n  return (\n    <Wrapper>\n      <AppIconsWrapper>\n        <AppIcons>\n          <SolanaIcon />\n          <ConnectDots />\n          {appIcon}\n        </AppIcons>\n      </AppIconsWrapper>\n      <Instruction>\n        To use {appName}, you need to connect a <strong>Solana</strong> wallet.\n      </Instruction>\n      <DetailsWrapper>\n        <Detail\n          icon={<LockIcon />}\n          title=\"You control your crypto\"\n          description=\"Using a non-custodial wallet enables you to control your crypto without having to trust third parties.\"\n        />\n        <Detail\n          icon={<BoltIcon />}\n          title=\"Transact quickly and cheaply\"\n          description=\"Solana's scalability ensures transactions remain less than $0.01 and at lightning fast speeds.\"\n        />\n      </DetailsWrapper>\n      <ButtonWithFooter\n        onClick={onContinue}\n        footer={\n          <>\n            First time using Solana?{\" \"}\n            <a\n              href=\"https://learn.goki.so\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              Learn more\n            </a>\n          </>\n        }\n      >\n        Continue\n      </ButtonWithFooter>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding: 28px;\n  padding-top: 33px;\n`;\n\nconst AppIcons = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr 48px;\n  grid-column-gap: 20px;\n  align-items: center;\n  width: 192px;\n`;\n\nconst Instruction = styled.h2`\n  font-weight: normal;\n  margin-top: 27px;\n  font-size: 24px;\n  line-height: 30px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #000000;\n`;\n\nconst DetailsWrapper = styled.div`\n  margin-top: 92px;\n  display: grid;\n  grid-row-gap: 28px;\n`;\n\nconst AppIconsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const DefaultAppIcon: React.FC = () => <Wrapper>?</Wrapper>;\n\nexport const Wrapper = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  border: 3px dashed #dedede;\n  background: #f9f9f9;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 36px;\n  color: #dedede;\n  user-select: none;\n`;\n","import styled from \"@emotion/styled\";\n\ntype Props = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  label: string;\n  name: string;\n};\n\nexport const LabeledInput: React.FC<Props> = ({\n  label,\n  ...inputProps\n}: Props) => {\n  return (\n    <Fieldset>\n      <Label htmlFor={inputProps.name}>{label}</Label>\n      <InputBorder>\n        <Input {...inputProps} />\n      </InputBorder>\n    </Fieldset>\n  );\n};\n\nconst Fieldset = styled.fieldset`\n  border: none;\n  outline: none;\n\n  height: 66px;\n  position: relative;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n`;\n\nconst InputBorder = styled.div`\n  position: absolute;\n  height: 56px;\n  top: 10px;\n  border: 1px solid #dfdfdf;\n  box-sizing: border-box;\n  border-radius: 4px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 4px;\n\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    border: 1px solid #aaa;\n  }\n  &:focus-within {\n    border: 1px solid #6764fb;\n  }\n  transition: border 0.2s ease;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  display: block;\n  left: 11px;\n  z-index: 2;\n  padding: 0 4px;\n  height: 20px;\n\n  background: #fff;\n  font-size: 12px;\n  line-height: 20px;\n  display: flex;\n  align-items: center;\n  letter-spacing: -0.02em;\n\n  color: #696969;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  height: 43px;\n\n  padding: 0 11px;\n  flex-grow: 1;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: -0.02em;\n\n  color: #000;\n  &::placeholder {\n    color: #b5b5b5;\n  }\n`;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport styled from \"@emotion/styled\";\nimport {\n  DEFAULT_WALLET_PROVIDERS,\n  DefaultWalletType,\n  useSolana,\n} from \"@saberhq/use-solana\";\nimport { useState } from \"react\";\n\nimport { LabeledInput } from \"../../LabeledInput\";\nimport { ButtonWithFooter } from \"../ButtonWithFooter\";\n\ninterface Props {\n  onBack?: () => void;\n  onError: (err: Error) => void;\n  onSuccess?: () => void;\n}\n\nexport const WalletStepLedgerAdvanced: React.FC<Props> = ({\n  onBack,\n  onSuccess,\n  onError,\n}: Props) => {\n  const [accountStr, setAccountStr] = useState<string>(\"\");\n  const [changeStr, setChangeStr] = useState<string>(\"\");\n  const { activate } = useSolana();\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <DEFAULT_WALLET_PROVIDERS.Ledger.icon />\n      </IconWrapper>\n      <h2>Enter your Ledger account info</h2>\n      <p>\n        Not sure what to enter here? You’re probably looking for the basic{\" \"}\n        <strong>Ledger Connect</strong>.\n      </p>\n      <Fields>\n        <LabeledInput\n          label=\"Account\"\n          placeholder=\"Root\"\n          name=\"account\"\n          value={accountStr}\n          onChange={(e) => {\n            setAccountStr(e.target.value);\n          }}\n        />\n        <LabeledInput\n          label=\"Change\"\n          placeholder=\"Root\"\n          name=\"change\"\n          value={changeStr}\n          onChange={(e) => {\n            setChangeStr(e.target.value);\n          }}\n        />\n      </Fields>\n      <ButtonWithFooter\n        onClick={async () => {\n          try {\n            const account =\n              accountStr === \"\" ? undefined : parseInt(accountStr);\n            const change = changeStr === \"\" ? undefined : parseInt(changeStr);\n            await activate(DefaultWalletType.Ledger, {\n              account,\n              change,\n            });\n          } catch (e) {\n            onError?.(e as Error);\n            return;\n          }\n          onSuccess?.();\n        }}\n        footer={\n          <>\n            Having trouble?{\" \"}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                onBack?.();\n              }}\n            >\n              Go back\n            </a>\n          </>\n        }\n      >\n        Continue\n      </ButtonWithFooter>\n    </Wrapper>\n  );\n};\n\nconst IconWrapper = styled.div`\n  & > svg,\n  & > img {\n    width: 36px;\n    height: 36px;\n  }\n  margin-bottom: 32px;\n`;\n\nconst Wrapper = styled.div`\n  padding: 28px;\n  padding-top: 67px;\n\n  & > h2 {\n    font-weight: bold;\n    font-size: 20px;\n    line-height: 25px;\n    letter-spacing: -0.02em;\n    color: #000000;\n  }\n\n  & > p {\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    color: #696969;\n  }\n`;\n\nconst Fields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n`;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport styled from \"@emotion/styled\";\nimport type { WalletProviderInfo } from \"@saberhq/use-solana\";\nimport { useEffect, useMemo } from \"react\";\n\nimport { ButtonWithFooter } from \"../ButtonWithFooter\";\n\ninterface Props {\n  info: WalletProviderInfo;\n}\n\nexport const WalletStepRedirect: React.FC<Props> = ({ info }: Props) => {\n  const providerURL = useMemo(() => {\n    try {\n      return new URL(info.url).hostname;\n    } catch (e) {\n      return info.url;\n    }\n  }, [info.url]);\n\n  const icon =\n    typeof info.icon === \"string\" ? (\n      <img src={info.icon} alt={`Icon for wallet ${info.name}`} />\n    ) : (\n      <info.icon />\n    );\n\n  // autoredirect after 1 second\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      window.open(info.url, \"_blank\", \"noopener\");\n    }, 1_000);\n    return () => clearTimeout(timeout);\n  });\n\n  return (\n    <Wrapper>\n      <IconWrapper>{icon}</IconWrapper>\n      <h2>You're being redirected</h2>\n      <p>\n        In order to use {info.name}, you must first install their browser\n        extension.\n      </p>\n      <p>\n        Make sure you only install their wallet from the official{\" \"}\n        <strong>{providerURL}</strong> website.\n      </p>\n      <ButtonWithFooter\n        onClick={() => {\n          window.open(info.url, \"_blank\", \"noopener\");\n        }}\n        footer={\n          <>\n            Finished installing?{\" \"}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                window.location.reload();\n              }}\n            >\n              Refresh\n            </a>\n          </>\n        }\n      >\n        Continue\n      </ButtonWithFooter>\n    </Wrapper>\n  );\n};\n\nconst IconWrapper = styled.div`\n  & > svg,\n  & > img {\n    width: 36px;\n    height: 36px;\n  }\n  margin-bottom: 32px;\n`;\n\nconst Wrapper = styled.div`\n  padding: 28px;\n  padding-top: 67px;\n\n  & > h2 {\n    font-weight: bold;\n    font-size: 20px;\n    line-height: 25px;\n    letter-spacing: -0.02em;\n    color: #000000;\n  }\n\n  & > p {\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    color: #696969;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport type { WalletProviderInfo } from \"@saberhq/use-solana\";\nimport React, { useMemo } from \"react\";\n\ninterface Props {\n  info: WalletProviderInfo;\n\n  onInstall?: (info: WalletProviderInfo) => void;\n  onSelect?: () => void;\n}\n\nexport const WalletProviderOption: React.FC<Props> = ({\n  info,\n  onInstall,\n  onSelect,\n}: Props) => {\n  const mustInstall =\n    typeof window !== \"undefined\" && info.isInstalled?.() === false;\n  const icon =\n    typeof info.icon === \"string\" ? (\n      <img src={info.icon} alt={`Icon for wallet ${info.name}`} />\n    ) : (\n      <info.icon />\n    );\n\n  const providerURL = useMemo(() => {\n    try {\n      const name = new URL(info.url).hostname;\n      if (name.startsWith(\"www.\")) {\n        return name.slice(4);\n      }\n      return name;\n    } catch (e) {\n      return info.url;\n    }\n  }, [info.url]);\n\n  return (\n    <Wrapper\n      role=\"button\"\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (mustInstall) {\n          onInstall?.(info);\n          return;\n        }\n        onSelect?.();\n      }}\n    >\n      <InfoTileWrapper className=\"wallet-info-tile\">\n        <InfoTile>\n          <IconWrapper>{icon}</IconWrapper>\n          <ProviderDesc>\n            <ProviderName>{info.name}</ProviderName>\n            <ProviderUrl>\n              {providerURL}\n              {mustInstall ? \" (not installed)\" : \"\"}\n            </ProviderUrl>\n          </ProviderDesc>\n        </InfoTile>\n      </InfoTileWrapper>\n    </Wrapper>\n  );\n};\n\nconst IconWrapper = styled.div`\n  height: 33px;\n  width: 33px;\n\n  & > img,\n  & > svg {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst InfoTileWrapper = styled.div`\n  flex: 1 1 auto;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst InfoTile = styled.div`\n  display: grid;\n  grid-template-columns: 33px 1fr;\n  grid-column-gap: 16px;\n`;\n\nconst ProviderDesc = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ProviderName = styled.span`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: #000000;\n`;\n\nconst ProviderUrl = styled.span`\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: -0.02em;\n  color: #696969;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 65px;\n  user-select: none;\n  cursor: pointer;\n  padding: 0 28px;\n\n  display: flex;\n  align-items: center;\n\n  background: #fff;\n  .wallet-info-tile {\n    border-bottom: 1px solid #f8f8f8;\n  }\n  &:hover {\n    background: #f9f9f9;\n    .wallet-info-tile {\n      border-bottom: 1px solid #e6e6e6;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport type { WalletProviderInfo } from \"@saberhq/use-solana\";\nimport {\n  DEFAULT_WALLET_PROVIDERS,\n  DefaultWalletType,\n} from \"@saberhq/use-solana\";\nimport React, { useEffect, useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nimport { WalletProviderOption } from \"./WalletProviderOption\";\n\nexport interface ProviderInfo {\n  type: DefaultWalletType;\n  info: WalletProviderInfo;\n  mustInstall: boolean;\n}\n\nconst getWalletProviders = (): readonly ProviderInfo[] => {\n  const base = (\n    Object.entries(DEFAULT_WALLET_PROVIDERS) as readonly [\n      DefaultWalletType,\n      WalletProviderInfo\n    ][]\n  )\n    .filter(([, p]) =>\n      typeof window !== \"undefined\" && isMobile ? p.isMobile : true\n    )\n    .slice()\n    .sort(([, a], [, b]) => {\n      if (typeof window !== \"undefined\") {\n        return (a.isInstalled?.() ?? true) === (b.isInstalled?.() ?? true)\n          ? a.name < b.name\n            ? -1\n            : 1\n          : a.isInstalled?.() ?? true\n          ? -1\n          : 1;\n      }\n      return a.name < b.name ? -1 : 1;\n    })\n    .map(\n      ([walletType, info]): ProviderInfo => ({\n        type: walletType,\n        info,\n        mustInstall: !!(\n          typeof window !== \"undefined\" &&\n          info.isInstalled &&\n          info.isInstalled()\n        ),\n      })\n    )\n    // no secret key for now\n    .filter((p) => p.type !== DefaultWalletType.SecretKey);\n  return [\n    ...base,\n    {\n      type: DefaultWalletType.Ledger,\n      info: {\n        ...DEFAULT_WALLET_PROVIDERS.Ledger,\n        name: \"Ledger (advanced)\",\n        url: \"https://ledger.com\",\n        isMobile: false,\n      },\n      mustInstall: false,\n    },\n  ];\n};\n\ninterface Props {\n  onSelect?: (info: ProviderInfo) => void;\n  onInstall?: (info: WalletProviderInfo) => void;\n}\n\nexport const WalletStepSelect: React.FC<Props> = ({\n  onSelect,\n  onInstall,\n}: Props) => {\n  const [showUninstalled, setShowUninstalled] = useState<boolean>(false);\n  const [providerInfo, setProviderInfo] = useState<readonly ProviderInfo[]>(\n    getWalletProviders()\n  );\n\n  useEffect(() => {\n    // wait a second for everything to load\n    const timeout = setTimeout(() => {\n      setProviderInfo(getWalletProviders());\n    }, 1_000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <>\n      <Heading>Select your wallet</Heading>\n      <ScrollArea>\n        <Wallets>\n          {providerInfo\n            .filter((prov) =>\n              showUninstalled\n                ? true\n                : prov.mustInstall || !prov.info.isInstalled\n            )\n            .map((fullInfo) => {\n              const { info: provider } = fullInfo;\n              return (\n                <WalletProviderOption\n                  key={provider.url}\n                  info={provider}\n                  onSelect={() => {\n                    onSelect?.(fullInfo);\n                  }}\n                  onInstall={onInstall}\n                />\n              );\n            })}\n        </Wallets>\n        <ShowUninstalledWrapper>\n          <ShowUninstalled onClick={() => setShowUninstalled(!showUninstalled)}>\n            {showUninstalled ? \"Hide\" : \"Show\"} uninstalled wallets\n          </ShowUninstalled>\n        </ShowUninstalledWrapper>\n      </ScrollArea>\n    </>\n  );\n};\n\nconst ScrollArea = styled.div`\n  height: calc(100% - 125px);\n  overflow-y: scroll;\n`;\n\nconst Wallets = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 65px;\n`;\n\nconst Heading = styled.h2`\n  padding: 48px 28px 0;\n\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 25px;\n  letter-spacing: -0.02em;\n  color: #000000;\n  margin-bottom: 24px;\n`;\n\nconst ShowUninstalled = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ShowUninstalledWrapper = styled.div`\n  margin: 24px 0;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import type { WalletProviderInfo } from \"@saberhq/use-solana\";\nimport { DefaultWalletType, useSolana } from \"@saberhq/use-solana\";\nimport React, { useMemo, useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nimport type { WalletKitArgs } from \"../../types\";\nimport type { ModalProps } from \"../Modal\";\nimport { Modal } from \"../Modal\";\nimport { WalletStepConnecting } from \"./WalletStepConnecting\";\nimport { WalletStepIntro } from \"./WalletStepIntro\";\nimport { DefaultAppIcon } from \"./WalletStepIntro/DefaultAppIcon\";\nimport { WalletStepLedgerAdvanced } from \"./WalletStepLedgerAdvanced\";\nimport { WalletStepRedirect } from \"./WalletStepRedirect\";\nimport type { ProviderInfo } from \"./WalletStepSelect\";\nimport { WalletStepSelect } from \"./WalletStepSelect\";\n\ntype Props = Omit<ModalProps, \"children\"> & WalletKitArgs;\n\nexport enum ModalStep {\n  Intro = \"intro\",\n  Select = \"select\",\n  Redirect = \"redirect\",\n  Connecting = \"connecting\",\n  LedgerAdvanced = \"ledger-advanced\",\n}\n\nconst defaultOnWalletKitError = (err: Error) => {\n  console.error(err);\n};\n\nexport const WalletSelectorModal: React.FC<Props> = ({\n  app,\n  onWalletKitError = defaultOnWalletKitError,\n  initialStep = ModalStep.Intro,\n  ...modalProps\n}: Props) => {\n  const appIcon = useMemo(() => app.icon ?? <DefaultAppIcon />, [app.icon]);\n\n  const [step, setStep] = useState<ModalStep>(initialStep);\n\n  const [installProvider, setInstallProvider] =\n    useState<WalletProviderInfo | null>(null);\n\n  const { disconnect, activate } = useSolana();\n  const [walletToConnect, setWalletToConnect] = useState<ProviderInfo | null>(\n    null\n  );\n\n  const onDismiss = () => {\n    modalProps.onDismiss();\n\n    // unset everything else after the modal unhide animation\n    setTimeout(() => {\n      setInstallProvider(null);\n      setWalletToConnect(null);\n      setStep(ModalStep.Intro);\n    }, 500);\n  };\n\n  return (\n    <Modal\n      {...modalProps}\n      onDismiss={onDismiss}\n      onBack={\n        step === ModalStep.Intro\n          ? undefined\n          : () => {\n              switch (step) {\n                case ModalStep.Select:\n                  setStep(ModalStep.Intro);\n                  break;\n                case ModalStep.Redirect:\n                  setStep(ModalStep.Select);\n                  break;\n                case ModalStep.Connecting:\n                  setStep(ModalStep.Select);\n                  break;\n                case ModalStep.LedgerAdvanced:\n                  setStep(ModalStep.Select);\n                  break;\n              }\n            }\n      }\n      hideSolanaLogo={step === ModalStep.Intro}\n    >\n      {step === ModalStep.Intro && (\n        <WalletStepIntro\n          appName={app.name}\n          appIcon={appIcon}\n          onContinue={() => setStep(ModalStep.Select)}\n        />\n      )}\n      {step === ModalStep.Select && (\n        <WalletStepSelect\n          onSelect={(info) => {\n            void disconnect();\n\n            if (\n              info.type === DefaultWalletType.Ledger &&\n              info.info.name === \"Ledger (advanced)\"\n            ) {\n              setStep(ModalStep.LedgerAdvanced);\n              return;\n            }\n\n            setWalletToConnect(info);\n            setStep(ModalStep.Connecting);\n\n            if (\n              isMobile &&\n              (info.type === DefaultWalletType.Sollet ||\n                info.type === DefaultWalletType.Solflare)\n            ) {\n              void activate(info.type);\n            }\n          }}\n          onInstall={(info) => {\n            setInstallProvider(info);\n            setStep(ModalStep.Redirect);\n          }}\n        />\n      )}\n      {step === ModalStep.Redirect && installProvider && (\n        <WalletStepRedirect info={installProvider} />\n      )}\n      {step === ModalStep.Connecting && walletToConnect && (\n        <WalletStepConnecting\n          appIcon={appIcon}\n          info={walletToConnect}\n          onBack={() => {\n            setStep(ModalStep.Select);\n          }}\n          onComplete={onDismiss}\n        />\n      )}\n      {step === ModalStep.LedgerAdvanced && (\n        <WalletStepLedgerAdvanced\n          onBack={() => {\n            setStep(ModalStep.Select);\n          }}\n          onError={onWalletKitError}\n          onSuccess={onDismiss}\n        />\n      )}\n    </Modal>\n  );\n};\n","import type { UseSolanaArgs } from \"@saberhq/use-solana\";\nimport { SolanaProvider } from \"@saberhq/use-solana\";\nimport React, { useContext, useMemo, useState } from \"react\";\n\nimport {\n  ModalStep,\n  WalletSelectorModal,\n} from \"./components/WalletSelectorModal\";\nimport type { WalletKitArgs } from \"./types\";\n\nexport { useConnectedWallet, useSolana, useWallet } from \"@saberhq/use-solana\";\n\nexport interface WalletKit {\n  connect: () => void;\n}\n\nexport const WalletKitContext = React.createContext<WalletKit | null>(null);\n\ninterface Props extends WalletKitArgs, UseSolanaArgs {\n  children: React.ReactNode;\n}\n\nexport const WalletKitProvider: React.FC<Props> = ({\n  children,\n  app,\n  initialStep = ModalStep.Intro,\n  ...solanaProviderArgs\n}: Props) => {\n  const [showWalletSelector, setShowWalletSelector] = useState<boolean>(false);\n\n  const kit = useMemo(() => {\n    return { connect: () => setShowWalletSelector(true) };\n  }, []);\n\n  return (\n    <SolanaProvider {...solanaProviderArgs}>\n      <WalletKitContext.Provider value={kit}>\n        <WalletSelectorModal\n          app={app}\n          initialStep={initialStep}\n          isOpen={showWalletSelector}\n          onDismiss={() => setShowWalletSelector(false)}\n        />\n        {children}\n      </WalletKitContext.Provider>\n    </SolanaProvider>\n  );\n};\n\n/**\n * Returns a function which shows the wallet selector modal.\n */\nexport const useWalletKit = (): WalletKit => {\n  const kit = useContext(WalletKitContext);\n  if (!kit) {\n    throw new Error(\"Not in WalletConnector context\");\n  }\n  return kit;\n};\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport lighten from \"polished/lib/color/lighten\";\n\nimport { useWalletKit } from \"../../WalletKitProvider\";\n\ninterface Props\n  extends Omit<\n    React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >,\n    \"onClick\"\n  > {\n  variant?: \"primary\" | \"secondary\";\n}\n\nconst Logomark: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    width=\"16\"\n    height=\"14\"\n    viewBox=\"0 0 16 14\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g clipPath=\"url(#solana_logomark_clip_goki)\">\n      <path\n        d=\"M2.59829 10.4132C2.69612 10.3119 2.82875 10.255 2.96704 10.255H15.7267C15.9592 10.255 16.0756 10.5463 15.9111 10.7166L13.3898 13.3277C13.292 13.4291 13.1594 13.486 13.0211 13.486H0.261373C0.0289306 13.486 -0.0874295 13.1947 0.0769974 13.0244L2.59829 10.4132Z\"\n        fill=\"currentcolor\"\n      />\n      <path\n        d=\"M2.59768 0.658221C2.69551 0.55691 2.82814 0.5 2.96643 0.5H15.7261C15.9586 0.5 16.075 0.791323 15.9105 0.961608L13.3892 3.57274C13.2914 3.67405 13.1588 3.73096 13.0205 3.73096H0.260763C0.0283203 3.73096 -0.0880399 3.43964 0.0763871 3.26935L2.59768 0.658221Z\"\n        fill=\"currentcolor\"\n      />\n      <path\n        d=\"M13.3898 5.50467C13.292 5.40334 13.1594 5.34647 13.0211 5.34647H0.261373C0.0289306 5.34647 -0.0874295 5.63776 0.0769975 5.80805L2.59829 8.41917C2.69612 8.52051 2.82875 8.57743 2.96704 8.57743H15.7267C15.9592 8.57743 16.0756 8.28609 15.9111 8.1158L13.3898 5.50467Z\"\n        fill=\"currentcolor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"solana_logomark_clip_goki\">\n        <rect\n          width=\"16\"\n          height=\"13\"\n          fill=\"currentcolor\"\n          transform=\"translate(0 0.5)\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport const ConnectWalletButton: React.FC<Props> = ({\n  variant = \"primary\",\n  ...buttonProps\n}: Props) => {\n  const { connect } = useWalletKit();\n  return (\n    <Button variant={variant} {...buttonProps} onClick={connect}>\n      <Logomark\n        css={css`\n          height: 13px;\n          width: 16px;\n        `}\n      />\n      <span>Connect Wallet</span>\n    </Button>\n  );\n};\n\nconst Button = styled.button<{\n  variant: \"primary\" | \"secondary\";\n}>`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  cursor: pointer;\n  border: none;\n  outline: none;\n  height: 40px;\n  mix-blend-mode: normal;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n  padding: 0 12px;\n\n  ${({ variant = \"primary\" }) =>\n    variant === \"primary\"\n      ? css`\n          background: #70ed9d;\n          color: #000;\n          &:hover {\n            background: ${lighten(0.1, \"#70ed9d\")};\n          }\n        `\n      : css`\n          background: #000;\n          color: #fff;\n          &:hover {\n            background: ${lighten(0.1, \"#000\")};\n          }\n        `}\n\n  & > span {\n    font-weight: bold;\n    font-size: 16px;\n    line-height: 20px;\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { ConnectWalletButton } from \"@gokiprotocol/walletkit\";\nimport { PendingTransaction } from \"@saberhq/solana-contrib\";\nimport { createInitMintInstructions } from \"@saberhq/token-utils\";\nimport { useConnectedWallet, useSolana } from \"@saberhq/use-solana\";\nimport { Keypair, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { lighten } from \"polished\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport { breakpoints } from \"./App\";\n\nexport const Body: React.FC = () => {\n  const { walletProviderInfo, disconnect, providerMut, network, setNetwork } =\n    useSolana();\n  const wallet = useConnectedWallet();\n  const [balance, setBalance] = useState<number | null>(null);\n\n  const refetchSOL = useCallback(async () => {\n    if (wallet && providerMut) {\n      setBalance(await providerMut.connection.getBalance(wallet.publicKey));\n    }\n  }, [providerMut, wallet]);\n\n  useEffect(() => {\n    void refetchSOL();\n  }, [refetchSOL]);\n\n  return (\n    <AppWrapper>\n      <h1\n        css={css`\n          font-size: 108px;\n          ${breakpoints.mobile} {\n            font-size: 64px;\n          }\n          margin: 0;\n        `}\n      >\n        WalletKit\n      </h1>\n      <p\n        css={css`\n          margin: 0;\n          margin-bottom: 48px;\n        `}\n      >\n        A wallet connector for Solana dApps.\n      </p>\n      <ConnectWalletButton />\n      <p\n        css={css`\n          margin-top: 48px;\n          font-size: 20px;\n        `}\n      >\n        Powered by Goki\n      </p>\n      {wallet ? (\n        <WalletInfo>\n          <h3>Connected Wallet</h3>\n          <ul>\n            <li>Wallet key: {wallet?.publicKey?.toString()}</li>\n            <li>Provider: {walletProviderInfo?.name}</li>\n            <li>Network: {network}</li>\n            <li>\n              Balance:{\" \"}\n              {typeof balance === \"number\"\n                ? `${(balance / LAMPORTS_PER_SOL).toLocaleString()} SOL`\n                : \"--\"}\n            </li>\n          </ul>\n          <Buttons>\n            <Button onClick={disconnect}>Disconnect</Button>\n            <Button\n              onClick={() => {\n                setNetwork(\"devnet\");\n              }}\n            >\n              Switch to Devnet\n            </Button>\n            <Button\n              disabled={!providerMut}\n              onClick={async () => {\n                invariant(providerMut, \"providerMut\");\n                const txSig = await providerMut.connection.requestAirdrop(\n                  providerMut.wallet.publicKey,\n                  LAMPORTS_PER_SOL\n                );\n                await new PendingTransaction(\n                  providerMut.connection,\n                  txSig\n                ).wait();\n                await refetchSOL();\n              }}\n            >\n              Request 1 SOL\n            </Button>\n            <Button\n              disabled={!providerMut}\n              onClick={async () => {\n                invariant(providerMut, \"providerMut\");\n                const tx = await createInitMintInstructions({\n                  provider: providerMut,\n                  mintKP: Keypair.generate(),\n                  decimals: 9,\n                });\n                await tx.confirm();\n                await refetchSOL();\n              }}\n            >\n              Send Transaction\n            </Button>\n          </Buttons>\n        </WalletInfo>\n      ) : (\n        <WalletInfo>\n          <p>Connect a wallet above.</p>\n        </WalletInfo>\n      )}\n    </AppWrapper>\n  );\n};\n\nconst AppWrapper = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n  text-align: center;\n`;\n\nconst WalletInfo = styled.div`\n  background: ${lighten(0.1, \"#282c34\")};\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  text-align: left;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  cursor: pointer;\n  border: none;\n  outline: none;\n  height: 40px;\n  mix-blend-mode: normal;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n  padding: 0 12px;\n\n  background: #000;\n  color: #fff;\n  &:hover {\n    background: ${lighten(0.1, \"#000\")};\n  }\n\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 20px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n`;\n","import { WalletKitProvider } from \"@gokiprotocol/walletkit\";\n\nimport { Body } from \"./Body\";\n\nexport const BREAKPOINT_SIZES = [576, 780, 992, 1200] as const;\n\nconst maxMediaQueries = BREAKPOINT_SIZES.map(\n  (bp) => `@media (max-width: ${bp}px)`\n);\n\nexport const breakpoints = {\n  mobile: maxMediaQueries[0],\n  tablet: maxMediaQueries[1],\n  medium: maxMediaQueries[2],\n};\n\nconst App: React.FC = () => {\n  return (\n    <WalletKitProvider\n      defaultNetwork=\"devnet\"\n      app={{\n        name: \"My App\",\n      }}\n    >\n      <Body />\n    </WalletKitProvider>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}